@model MotoGP.Models.ViewModel.ListTicketsViewModel

@{
    ViewData["Title"] = "Ordered tickets";

}
<form asp-controller="shop" asp-action="ListTickets" method="get">
    <select asp-for="raceID" asp-items="Model.Races">
        <option value="0">-- Select a race --</option>
    </select>
    <input type="submit" value="Filter" />
</form>

<br />

<table>
    <tr>
        <th>@(Html.DisplayNameFor(model => Model.Tickets[0].OrderDate))</th>
        <th>@(Html.DisplayNameFor(model => model.Tickets[0].Name))</th>
        <th>@(Html.DisplayNameFor(model => model.Tickets[0].Email))</th>
        <th>@(Html.DisplayNameFor(model => model.Tickets[0].Address))</th>
        <th>@(Html.DisplayNameFor(model => model.Tickets[0].Country))</th>
        <th>@(Html.DisplayNameFor(model => model.Tickets[0].Race))</th>
        <th>@(Html.DisplayNameFor(model => model.Tickets[0].Number))</th>

    </tr>
    @foreach (var item in Model.Tickets)
    {
<tr>

    <td>@(Html.DisplayFor(modelItem => item.OrderDate))</td>
    <td>@(Html.DisplayFor(modelItem => item.Name))</td>
    <td>@(Html.DisplayFor(modelItem => item.Email))</td>
    <td>@(Html.DisplayFor(modelItem => item.Address))</td>
    <td>@(Html.DisplayFor(modelItem => item.Country.Name))</td>
    <td>@(Html.DisplayFor(modelItem => item.Race.Name))</td>
    <td>@(Html.DisplayFor(modelItem => item.Number))</td>
    <td>
        @if (item.Paid)
        {
            <p>Paid</p>
        }
        else
        {
        <a asp-controller="shop" asp-action="EditTicket"
           asp-route-id="@item.TicketID">Pay</a>
        }

    </td>
</tr>
    }

</table>

<a asp-controller="Home" asp-action="Menu">Back</a>
@*|<a asp-controller="Info" asp-action="BuildMap"> Races on map</a>
               |<a asp-controller="Info" asp-action="SelectRace"> One by one</a>*@
<style>
    .centered {
        position: fixed;
        top: 50%;
        left: 50%;
        transform: translate(-50 %, -50 %);
    }
</style>
